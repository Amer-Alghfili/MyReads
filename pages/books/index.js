import { Box, chakra } from "@chakra-ui/react";
import Head from "next/head";
import { useEffect, useState } from "react";
import BooksResults from "../../components/books-page/BookResults";
import Hero from "../../components/books-page/Hero";
import Footer from "../../components/Footer";
import Header from "../../components/Header";
import { getAll, search } from "../../services/bookAPI";

export default function Books({ mountedBooks }) {
  const [books, setBooks] = useState(mountedBooks);
  const [query, setQuery] = useState("");

  useEffect(
    function updateBooksEffect() {
      async function fetchBooks() {
        let newBooks = [];
        if (query) {
          newBooks = await search(query);
          if (newBooks.error) {
            newBooks = await getAll();
          }
        } else {
          newBooks = await getAll();
        }
        setBooks(newBooks);
      }
      fetchBooks();
    },
    [query]
  );

  return (
    <Box bgColor="#F2F6FF" minH="100vh" color="#454545">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <Header />
      <div className="root">
        <Hero searchQuery={query} searchChange={setQuery} />
        <chakra.main p={{ base: "2em", md: "4em" }}>
          <BooksResults books={books} />
        </chakra.main>
      </div>
      <Footer />
    </Box>
  );
}

export async function getServerSideProps() {
  const books = await getAll();
  return {
    props: {
      mountedBooks: books,
    },
  };
}
